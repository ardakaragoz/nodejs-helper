{
    "Express Server": {
        "prefix": "!express",
        "body": [
            "const express = require(\"express\");",
            "const app = express();",
            "const port = 3000;",
            "app.get('/', (req, res) => {",
            "res.send('Hello World!')",
            "})",
            " ",
            "app.listen(port, () => {",
            "console.log(`Server is listening at http: //localhost:${port}`)",
            "})",
        ],
            "description": "Create Express 3000 server."
    },
    "Express Server 5000": {
        "prefix": "!express5000",
        "body": [
            "const express = require(\"express\");",
            "const app = express();",
            "const port = 5000;",
            "app.get('/', (req, res) => {",
            "res.send('Hello World!')",
            "})",
            " ",
            "app.listen(port, () => {",
            "console.log(`Server is listening at http: //localhost:${port}`)",
            "})",
        ],
            "description": "Create Express 5000 server."
    },
    "Express Server 2000": {
        "prefix": "!express2000",
        "body": [
            "const express = require(\"express\");",
            "const app = express();",
            "const port = 2000;",
            "app.get('/', (req, res) => {",
            "res.send('Hello World!')",
            "})",
            " ",
            "app.listen(port, () => {",
            "console.log(`Server is listening at http: //localhost:${port}`)",
            "})",
        ],
            "description": "Create Express 2000 server."
    },
    "Express Server 8000": {
        "prefix": "!express8000",
        "body": [
            "const express = require(\"express\");",
            "const app = express();",
            "const port = 8000;",
            "app.get('/', (req, res) => {",
            "res.send('Hello World!')",
            "})",
            " ",
            "app.listen(port, () => {",
            "console.log(`Server is listening at http: //localhost:${port}`)",
            "})",
        ],
            "description": "Create Express 8000 server."
    },
    "Express 404": {
        "prefix": "!notfound",
        "body": [
            "app.use((req, res,next) => {",
            "res.status(404).send('<h1> Page not found </h1>');",
            "});"
        ],
        "description": "Express 404 function."
    },
    "Express Send File": {
        "prefix": "!sendfile",
        "body": [
            "app.get('/', function(req, res) {", 
            "res.sendFile(\"YOUR FILE\")",
            "});"
        ],
        "description": "Express sendFile function."
    },
    "Express Get File": {
        "prefix": "!get",
        "body": [
            "app.get('/', function(req, res) {",
            "res.send(\"Hello!\")",
            "});"
        ],
        "description": "Express get function."
    },
    "Cheerio": {
        "prefix": "!cheerio",
        "body": [
            "const cheerio = require('cheerio');",
            "const axios = require('axios')",
            "axios.get(\"SITE\").then(res => {",
            "//Cheerio",
            "let $ = cheerio.load(res.data);",
            "//You Can Write Codes here.",
            " ",
            "});"
        ],
        "description": "Creates default cheerio and axios code"
    },
    "Cheerio Load": {
        "prefix": "!load",
        "body": [
            "let $ = cheerio.load(res.data);"
        ],
        "description": "Cheerio load sentence"
    },
    "Discord.js": {
        "prefix": "!djs",
        "body": [
            "const Discord = require('discord.js');\nconst client = new Discord.Client();\nclient.on('ready', () => {\nconsole.log(`Logged in as ${client.user.tag}!`);\n});\n\nclient.on('message', msg => {\nif (msg.content === 'ping') {\nmsg.reply('Pong!');\n}\n});\n\nclient.login('token');"
        ],
        "description": "Discord.js Template"
    },
    "Discord.js Client.on message": {
        "prefix": "!message",
        "body": [
            "client.on('message', async message => {\nif (message.content.startsWith(\"MESSAGE\")) {\n\n}\n});"
        ],
        "description": "Discord.js Message Emitter"
    }
}
